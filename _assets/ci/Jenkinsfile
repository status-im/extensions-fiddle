pipeline {
  
  /* This image comes from _assets/docker */
  agent {
    docker {
      label 'linux'
      image 'statusteam/clojure:latest'
    }
  }

  options {
    timestamps()
    /* avoid race conditions on deploy */
    disableConcurrentBuilds()
    /* manage how many builds we keep */
    buildDiscarder(logRotator(numToKeepStr: '60'))
  }

  environment {
    GH_REPO = 'status-im/extensions-fiddle'
    GH_USER = 'status-im-auto'
    GH_MAIL = 'auto@status.im'
    HOME    = '/tmp'
  }

  stages {
    stage('Prep') {
      steps {
        sh "git config user.name  ${GH_USER}"
        sh "git config user.email ${GH_MAIL}"
        sh 'yarn install'
      }
    }

    stage('Build') {
      steps {
        sh 'make compile'
      }
    }

    stage('Publish') {
      steps { script {
        test = ''
        withCredentials([usernamePassword(
          credentialsId: 'status-im-auto',
          usernameVariable: 'GH_USER',
          passwordVariable: 'GH_PASS'
        )]) {
          sh 'make deploy-website'
        }
      } }
    }
  }
  post {
    always { sh 'make clean' }
  }
}
